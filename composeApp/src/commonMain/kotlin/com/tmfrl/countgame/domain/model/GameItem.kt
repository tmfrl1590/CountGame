package com.tmfrl.countgame.domain.model

import androidx.compose.ui.graphics.Color

// Í≤åÏûÑÏóêÏÑú Ïù¥ÎèôÌïòÎäî Ïò§Î∏åÏ†ùÌä∏Î•º ÎÇòÌÉÄÎÇ¥Îäî Îç∞Ïù¥ÌÑ∞ ÌÅ¥ÎûòÏä§
data class GameItem(
    val id: String,
    val type: ItemType,
    val x: Float,
    val y: Float,
    val velocityX: Float,
    val velocityY: Float,
    val rotation: Float = 0f,
    val scale: Float = 1f,
    val alpha: Float = 1f
)

// Í≤åÏûÑ Ïò§Î∏åÏ†ùÌä∏Ïùò Ï¢ÖÎ•ò
enum class ItemType(
    val displayName: String,
    val color: Color,
    val emoji: String
) {
    APPLE("ÏÇ¨Í≥º", Color(0xFFE74C3C), "üçé"),
    BANANA("Î∞îÎÇòÎÇò", Color(0xFFF1C40F), "üçå"),
    CARROT("ÎãπÍ∑º", Color(0xFFE67E22), "ü•ï"),
    GRAPES("Ìè¨ÎèÑ", Color(0xFF9B59B6), "üçá"),
    TOMATO("ÌÜ†ÎßàÌÜ†", Color(0xFFD63031), "üçÖ"),
    PEACH("Î≥µÏà≠ÏïÑ", Color(0xFFFE7096), "üçë")
}

// Í≤åÏûÑ ÏÉÅÌÉú
enum class GameState {
    READY,      // Í≤åÏûÑ Ï§ÄÎπÑ Ï§ë
    PLAYING,    // Í≤åÏûÑ ÏßÑÌñâ Ï§ë
    PAUSED,     // ÏùºÏãúÏ†ïÏßÄ
    ANSWERING,  // ÎãµÎ≥Ä ÏûÖÎ†• Ï§ë
    RESULT,     // Í≤∞Í≥º ÌëúÏãú
    FINISHED    // Í≤åÏûÑ Ï¢ÖÎ£å
}

// Í≤åÏûÑ ÌÉÄÏûÖ
enum class GameType {
    COUNTING,   // Í∞úÏàò ÏÑ∏Í∏∞ Í≤åÏûÑ
    TAPPING     // ÌÑ∞ÏπòÌïòÏó¨ ÌÑ∞Îú®Î¶¨Í∏∞ Í≤åÏûÑ
}

// Í≤åÏûÑ ÎÇúÏù¥ÎèÑ ÏÑ§Ï†ï
data class GameDifficulty(
    val stage: Int,
    val itemCount: Int,
    val speed: Float,
    val timeLimit: Int, // seconds
    val hasRotation: Boolean = false,
    val hasAlpha: Boolean = false,
    val hasScale: Boolean = false,
    val similarItems: Boolean = false,
    val countAllItems: Boolean = true // true: Ï†ÑÏ≤¥ ÏïÑÏù¥ÌÖú Í∞úÏàò, false: ÌäπÏ†ï ÏïÑÏù¥ÌÖú Í∞úÏàò
) {
    companion object {
        fun forStage(stage: Int): GameDifficulty {
            return when (stage) {
                in 1..3 -> GameDifficulty(
                    stage = stage,
                    itemCount = 5 + stage,
                    speed = 1f,
                    timeLimit = 8,
                    countAllItems = true
                )
                in 4..6 -> GameDifficulty(
                    stage = stage,
                    itemCount = 8 + stage,
                    speed = 1.2f,
                    timeLimit = 7,
                    hasRotation = true,
                    countAllItems = true
                )
                in 7..10 -> GameDifficulty(
                    stage = stage,
                    itemCount = 12 + stage,
                    speed = 1.5f,
                    timeLimit = 6,
                    hasRotation = true,
                    hasAlpha = true,
                    countAllItems = true
                )
                in 11..15 -> GameDifficulty(
                    stage = stage,
                    itemCount = 18 + stage,
                    speed = 1.8f,
                    timeLimit = 5,
                    hasRotation = true,
                    hasAlpha = true,
                    hasScale = true,
                    countAllItems = false // ÌäπÏ†ï Í≥ºÏùºÎßå ÏÑ∏Í∏∞
                )
                else -> GameDifficulty(
                    stage = stage,
                    itemCount = 25 + (stage - 15) * 2,
                    speed = 2f + (stage - 15) * 0.1f,
                    timeLimit = 4,
                    hasRotation = true,
                    hasAlpha = true,
                    hasScale = true,
                    similarItems = true,
                    countAllItems = false // ÌäπÏ†ï Í≥ºÏùºÎßå ÏÑ∏Í∏∞
                )
            }
        }
    }
}